% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.fit.R
\name{dsdive.fit}
\alias{dsdive.fit}
\title{Likelihood for completely observed dive trajectories}
\usage{
dsdive.fit(
  dives.obs,
  cl,
  beta.init,
  lambda.init,
  verbose = FALSE,
  T1.prior,
  T2.prior,
  pi1.prior,
  pi2.prior,
  lambda1.prior,
  lambda2.prior,
  lambda3.prior,
  it,
  inflation.factor.lambda = 1.1,
  checkpoint.interval = Inf,
  checkpoint.function = function(x, ...) { }
)
}
\arguments{
\item{depths}{Depth bin indices in which the trajectory was observed}

\item{durations}{Amount of time spent in each depth bin}

\item{times}{Times at which each depth bin was entered}

\item{stages}{Record of dive stages at each depth bin}

\item{beta}{\eqn{2 x 3} matrix in which each column contains the diving 
preference and directional persistence parameters for the DIVING, SUBMERGED, 
and SURFACING dive stages.}

\item{lambda}{length 3 vector that specifies the transition rate, 
respectively in the DIVING, SUBMERGED, and SURFACING stages.}

\item{sub.tx}{length 2 vector that specifies the first depth bin at which 
transitions to the SUBMERGED stage can occur and the probability that such 
a transition occurs at the next depth transition}

\item{surf.tx}{parameter that specifies the probability the trajectory will 
transition to the SURFACING stage at the next depth transition}

\item{depth.bins}{\eqn{n x 2} Matrix that defines the depth bins.  The first 
column defines the depth at the center of each depth bin, and the second 
column defines the half-width of each bin.}

\item{t0.dive}{Time at which dive started}

\item{d0.last}{If the depth bin that proceeded the first depth bin in 
\code{depths}.  If the trajectory to be analyzed was started at the 
surface, then set \code{c0.last=NULL}.}

\item{model}{Either \code{"conditional"} or \code{"logit"} depending on the 
method used to determine stage transition probability curves}
}
\description{
Likelihood for completely observed dive trajectories
}
\examples{
data('dive.sim')
attach(dive.sim)
attach(dive.sim$params)

ld = dsdive.ld(depths = sim$depths, durations = sim$durations, 
               times = sim$times, stages = sim$stages, beta = beta, 
               lambda = lambda, sub.tx = sub.tx, surf.tx = surf.tx, 
               depth.bins = depth.bins, t0.dive = 0, t.stage2 = NA, 
               model = 'conditional')

detach(dive.sim$params)
detach(dive.sim)
}
