% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.simplify.trajectory.R
\name{dsdive.simplify.trajectory}
\alias{dsdive.simplify.trajectory}
\title{Merges repeated entries where we do not see a depth bin or stage transition}
\usage{
dsdive.simplify.trajectory(depths, times, stages)
}
\description{
Merges repeated entries where we do not see a depth bin or stage transition
}
\examples{
data('dive.sim')
attach(dive.sim)

# recompute dive stages and durations when we change t.stages
t.stages.new = 60*c(5,10)
augmented = dsdive.augment.trajectory(depths = sim$depths, times = sim$times, 
                                      t.stages = t.stages.new)

# recompute original dive stage breakpoints
t.stages.orig = sim$times[c(FALSE,diff(sim$stages)==1)]
reverted = dsdive.augment.trajectory(depths = augmented$depths, 
                                     times = augmented$times, 
                                     t.stages = t.stages.orig)

# dive before changing t.stages
pl1 = plot(x = sim, depth.bins = depth.bins)

# dive after changing t.stages
pl2 = plot(x = augmented, depth.bins = depth.bins)

ggpubr::ggarrange(pl1, pl2, nrow = 2, ncol = 1)



# after reverting dive; durations by stage are correct, but...
rbind(
  original = sapply(split(sim$durations, sim$stages), 
                    function(x) sum(x[is.finite(x)])),
  reverted = sapply(split(reverted$durations, reverted$stages), 
                    function(x) sum(x[is.finite(x)]))
)

# number of actual duration entries has grown
c(length(sim$durations), length(reverted$durations))

#
# the simplification function remedies this issue
#

simplified = dsdive.simplify.trajectory(depths = reverted$depths, 
                                        times = reverted$times, 
                                        stages = reverted$stages)

all(simplified$depths == sim$depths,
    simplified$times == sim$times,
    simplified$durations[is.finite(simplified$durations)] == 
      sim$durations[is.finite(sim$durations)],
    simplified$stages == sim$stages
)

detach(dive.sim)
 
}
