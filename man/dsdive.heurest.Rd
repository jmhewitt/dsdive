% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.heurest.R
\name{dsdive.heurest}
\alias{dsdive.heurest}
\title{Heuristic estimate of model parameters given observations}
\usage{
dsdive.heurest(
  depths,
  times,
  stages.est,
  depth.bins,
  priors,
  t0.dive,
  method = "Nelder-Mead",
  model
)
}
\arguments{
\item{depths}{Record of observed depth bin indices}

\item{times}{Times at which depth bin observations were made}

\item{stages.est}{Vector of guesses for which dive stage the trajectory was 
in at each observation}

\item{depth.bins}{\eqn{n x 2} Matrix that defines the depth bins.  The first 
column defines the depth at the center of each depth bin, and the second 
column defines the half-width of each bin.}

\item{priors}{List of parameters to specify prior distributions.  See 
\code{dsdive.prior} for more details.}

\item{t0.dive}{Time at which dive started}

\item{method}{Method to use in \code{optim} search for initial parameters}

\item{model}{Either \code{"conditional"} or \code{"logit"} depending on the 
method used to determine stage transition probability curves}
}
\description{
Builds heuristic estimates of dive model parameters, which is useful for 
initializing methods that optimize or explore parameter surfaces and 
posterior distributions.
}
\details{
The heuristic estimate begins by linearly imputing a dive trajectory that 
is consistent with observations, then optimizes model parameters from the 
basic imputed trajectory.  Note that the imputed trajectory is likely to be 
very unrealistic, especially for datasets with sparse temporal observations.
}
\examples{
data('dive.sim')
attach(dive.sim)

spec = list(beta.sd = rep(1, 3), beta.absmax = 5, lambda.sd = 1, 
            sub.tx.mean = 0, sub.tx.sd = 1, surf.tx.mean = 0, surf.tx.sd = 1,
            sub.tx = params$sub.tx, surf.tx = params$surf.tx)

est = dsdive.heurest(depths = sim.obs$depths, times = sim.obs$times, 
                     stages.est = sim.obs$stages, depth.bins = depth.bins,
                     t0.dive = 0, priors = spec, model = 'conditional')

detach(dive.sim)
}
