% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.tx.params.R
\name{dsdive.tx.params}
\alias{dsdive.tx.params}
\title{Compute transition parameters for dive trajectories across discrete depths}
\usage{
dsdive.tx.params(t0, depth.bins, d0, d0.last = NULL, s0, beta, lambda,
  sub.tx, surf.tx, t0.dive)
}
\arguments{
\item{t0}{time at which transition parameters should be computed}

\item{depth.bins}{\eqn{n x 2} Matrix that defines the depth bins.  The first 
column defines the depth at the center of each depth bin, and the second 
column defines the half-width of each bin.}

\item{d0}{the depth bin at which transition parameters should be computed}

\item{d0.last}{the previous depth bin in which the trajectory was.  If 
\code{NULL}, then the autoregressive component will be skipped.}

\item{s0}{the dive stage (PRIMARY DESCENT==1, INTERMEDIATE BEHAVIORS==2, 
PRIMARY ASCENT==3) for which transition parameters should be computed.}

\item{beta}{\eqn{2 x 3} matrix in which each column contains the diving 
preference and directional persistence parameters for the PRIMARY DESCENT 
(PD), INTERMEDIATE BEHAVIORS (IB), and PRIMARY ASCENT (PA) dive stages.}

\item{lambda}{length 3 vector that specifies the transition rate, 
respectively in the PD, IB, and PA stages.}

\item{sub.tx}{length 2 vector that specifies the first depth bin at which 
transitions to the IB stage can occur and the probability that such 
a transition occurs at the next depth transition}

\item{surf.tx}{parameter that specifies the probability the trajectory will 
transition to the PA stage at the next depth transition}

\item{t0.dive}{Time at which dive started}
}
\description{
Computes elements of a transition matrix when given model parameters and 
time/space locations for a dive model that has 3 stages, PRIMARY DESCENT 
(PD), INTERMEDIATE BEHAVIORS (IB), and PRIMARY ASCENT (PA).
}
\examples{
data('dive.sim')
attach(dive.sim)
attach(dive.sim$params)

dsdive.tx.params(t0 = 0, depth.bins = depth.bins, d0 = 0, 
                 d0.last = NULL, s0 = 1, beta = beta, lambda = lambda, 
                 sub.tx = sub.tx, surf.tx = surf.tx, t0.dive = 0)

dsdive.tx.params(t0 = 0, depth.bins = depth.bins, d0 = 60, 
                 d0.last = 61, s0 = 1, beta = beta, lambda = lambda, 
                 sub.tx = sub.tx, surf.tx = surf.tx, t0.dive = 0)

dsdive.tx.params(t0 = 0, depth.bins = depth.bins, d0 = 60, 
                 d0.last = 61, s0 = 2, beta = beta, lambda = lambda, 
                 sub.tx = sub.tx, surf.tx = surf.tx, t0.dive = 0)

detach(dive.sim$params)
detach(dive.sim)
}
