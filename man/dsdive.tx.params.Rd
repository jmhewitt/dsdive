% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.tx.params.R
\name{dsdive.tx.params}
\alias{dsdive.tx.params}
\title{Compute transition parameters for dive trajectories across discrete depths}
\usage{
dsdive.tx.params(t0, num.depths, d0, d0.last = NULL, s0, beta, lambda,
  sub.tx, surf.tx)
}
\arguments{
\item{t0}{time at which transition parameters should be computed}

\item{num.depths}{The total number of non-surface depth bins.  Specifies the 
depth bins 0, 1, ..., \code{num.depths} the model will use.  Note that the 
model does not explicitly use the depth ranges the bins represent 
(i.e., the bin labels) to compute transition parameters.}

\item{d0}{the depth bin at which transition parameters should be computed}

\item{d0.last}{the previous depth bin in which the trajectory was.  If 
\code{NULL}, then the autoregressive component will be skipped.}

\item{s0}{the dive stage (DIVING==1, SUBMERGED==2, SURFACING==3) for which 
transition parameters should be computed.}

\item{beta}{\eqn{2 x 3} matrix in which each column contains the diving 
preference and directional persistence parameters for the DIVING, SUBMERGED, 
and SURFACING dive stages.}

\item{lambda}{length 3 vector that specifies the transition rate, 
respectively in the DIVING, SUBMERGED, and SURFACING stages.}

\item{sub.tx}{length 2 vector that specifies the first depth bin at which 
transitions to the SUBMERGED stage can occur and the probability that such 
a transition occurs at the next depth transition}

\item{surf.tx}{parameter that specifies the probability the trajectory will 
transition to the SURFACING stage at the next depth transition}
}
\description{
Dives have 3 stages, DIVING, SUBMERGED, and SURFACING.
}
\examples{
beta = matrix(c(1,   0, -1, 
                0, -.5,  0), 
              nrow = 2, byrow = TRUE)

lambda = c(3, 2, 1)

sub.tx = c(60, .05)

surf.tx = .02

dsdive.tx.params(t0 = 0, num.depths = 200, d0 = 0, d0.last = NULL, s0 = 1, 
                 beta = beta, lambda = lambda, sub.tx = sub.tx, 
                 surf.tx = surf.tx)

dsdive.tx.params(t0 = 0, num.depths = 200, d0 = 60, d0.last = NULL, s0 = 2, 
                 beta = beta, lambda = lambda, sub.tx = sub.tx, 
                 surf.tx = surf.tx)

dsdive.tx.params(t0 = 0, num.depths = 200, d0 = 60, d0.last = 61, s0 = 2, 
                 beta = beta, lambda = lambda, sub.tx = sub.tx, 
                 surf.tx = surf.tx)
}
