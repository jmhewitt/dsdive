% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.obstxmat.cov.R
\name{dsdive.obstxmat.cov}
\alias{dsdive.obstxmat.cov}
\title{Compute probability transition matrix for partially observed CTMC}
\usage{
dsdive.obstxmat.cov(
  pi.designs,
  lambda.designs,
  beta1,
  beta2,
  alpha1,
  alpha2,
  alpha3,
  s0,
  ind,
  tstep,
  include.raw,
  depth.bins,
  delta
)
}
\arguments{
\item{pi.designs}{list of design matrices for the diving preference 
parameters by stage.}

\item{lambda.designs}{list of design matrices for the diving speed
parameters by stage.}

\item{beta1}{coefficient values for linear model for logit(pi^{(1)}).}

\item{beta2}{coefficient values for linear model for logit(pi^{(3)}).}

\item{alpha1}{coefficient values for linear model for log(lambda^{(1)}).}

\item{alpha2}{coefficient values for linear model for log(lambda^{(2)}).}

\item{alpha3}{coefficient values for linear model for log(lambda^{(3)}).}

\item{s0}{stage for which the transition matrix should be computed}

\item{ind}{transition matrix is unique for each dive.  The parameter 
\code{ind} specifies that the transition matrix should be computed for the 
dive associated with the covariates in row \code{ind} in the design 
matrices (see \code{pi.designs}, \code{lambda.designs}).}

\item{tstep}{Time between observations of the CTMC}

\item{include.raw}{\code{TRUE} to include raw components of the probability
transition matrix so that the matrix can be computed for arbitrary 
timesteps}

\item{depth.bins}{\eqn{n x 2} Matrix that defines the depth bins.  The first 
column defines the depth at the center of each depth bin, and the second 
column defines the half-width of each bin.}

\item{delta}{If \code{delta>0}, then the observation matrix and raw 
components computed will be for a transition matrix whose generator is 
perturbed to allow much faster computation.}
}
\description{
Given model parameters, this function will compute the probability transition 
matrix for a Continuous time Markov chain (CTMC) that is observed once, and 
then again at a time of \code{tstep} units of time later.  If 
\code{include.raw==TRUE}, then raw components of the probability transition 
matrix will be returned so that the transition matrix can be computed for 
arbitrary timesteps.
}
\examples{
data('dive.sim')
attach(dive.sim)
attach(dive.sim$params)

beta1 = c(0, 0)
beta2 = c(0, 0)
alpha1 = c(0, 0)
alpha2 = c(0, 0)
alpha3 = c(0, 0)

covs = data.frame(x1 = c(.5, 1), x2 = c(0, .3))

pi.formula = ~x1
lambda.formula = ~x1:x2


#
# expand covariate design matrices
#

if(!inherits(pi.formula, 'list')) {
  pi.formula = list(pi.formula, pi.formula)
}

if(!inherits(lambda.formula, 'list')) {
  lambda.formula = list(lambda.formula, lambda.formula, lambda.formula)
}

pi.designs = lapply(pi.formula, function(f) model.matrix(f, covs))
lambda.designs = lapply(lambda.formula, function(f) model.matrix(f, covs))


#
# build transition matrix
#

m = dsdive.obstxmat.cov(
  pi.designs = pi.designs, lambda.designs = lambda.designs, beta1 = beta1, 
  beta2 = beta2, alpha1 = alpha1, alpha2 = alpha2, alpha3 = alpha3, s0 = 1, 
  ind = 1, tstep = 300, include.raw = TRUE, depth.bins = depth.bins, 
  delta = 1e-10)

detach(dive.sim$params)
detach(dive.sim)
}
