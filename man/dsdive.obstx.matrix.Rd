% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dsdive.obstx.matrix.R
\name{dsdive.obstx.matrix}
\alias{dsdive.obstx.matrix}
\title{Compute probability transition matrix for partially observed CTMC}
\usage{
dsdive.obstx.matrix(
  depth.bins,
  beta,
  lambda,
  s0,
  tstep,
  include.raw = FALSE,
  A = NULL,
  obstx.mat = NULL
)
}
\arguments{
\item{depth.bins}{\eqn{n x 2} Matrix that defines the depth bins.  The first 
column defines the depth at the center of each depth bin, and the second 
column defines the half-width of each bin.}

\item{beta}{the current depth bin transition model parameters}

\item{lambda}{the current depth bin transition rate model parameters}

\item{s0}{the stage for which to compute the transition matrix}

\item{tstep}{Time between observations of the CTMC}

\item{include.raw}{\code{TRUE} to include raw components of the probability
transition matrix so that the matrix can be computed for arbitrary 
timesteps}

\item{A}{intended to be used to pass in pre-allocated, shared-memory storage 
for the uniformized transition matrix.  Shared memory is managed by the 
\code{bigmemory} package.  If \code{A=NULL}, then a standard R matrix will
be initialized and returned instead.}

\item{obstx.mat}{intended to be used to pass in pre-allocated, shared-memory 
storage for the probability transition matrix.  Shared memory is managed 
by the \code{bigmemory} package.  If \code{obstx.mat=NULL}, then a 
standard R matrix will be initialized and returned instead.}
}
\description{
Given model parameters, this function will compute the probability transition 
matrix for a Continuous time Markov chain (CTMC) that is observed once, and 
then again at a time of \code{tstep} units of time later.  If 
\code{include.raw==TRUE}, then raw components of the probability transition 
matrix will be returned so that the transition matrix can be computed for 
arbitrary timesteps.
}
\examples{
data('dive.sim')
attach(dive.sim)
attach(dive.sim$params)

o = dsdive.obstx.matrix(depth.bins = depth.bins, beta = beta, lambda = lambda, 
                        s0 = 1, tstep = 300, include.raw = TRUE)


detach(dive.sim$params)
detach(dive.sim)
}
